name: Cypress CI

on:
  push:
    branches:
      - 'main'
  merge_group:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: false

jobs:
  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    timeout-minutes: 50
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Yarn Install and Cache
        uses: graasp/graasp-deploy/.github/actions/yarn-install-and-cache@v1
        with:
          cypress: true

      # type check
      - name: Type-check code
        run: tsc --noEmit

      - name: Build App
        run: NODE_OPTIONS=--max-old-space-size=8192 yarn build:test
        shell: bash
        env:
          VITE_PORT: ${{ vars.VITE_PORT }}
          VITE_VERSION: ${{ vars.VITE_VERSION }}
          VITE_GRAASP_DOMAIN: ${{ vars.VITE_GRAASP_DOMAIN }}
          VITE_GRAASP_API_HOST: ${{ vars.VITE_GRAASP_API_HOST }}
          VITE_GRAASP_AUTH_HOST: ${{ vars.VITE_GRAASP_AUTH_HOST }}
          VITE_GRAASP_PLAYER_HOST: ${{ vars.VITE_GRAASP_PLAYER_HOST }}
          VITE_GRAASP_LIBRARY_HOST: ${{ vars.VITE_GRAASP_LIBRARY_HOST }}
          VITE_GRAASP_ANALYZER_HOST: ${{ vars.VITE_GRAASP_ANALYZER_HOST }}
          VITE_SHOW_NOTIFICATIONS: ${{ vars.VITE_SHOW_NOTIFICATIONS }}
          VITE_GRAASP_REDIRECTION_HOST: ${{ vars.VITE_GRAASP_REDIRECTION_HOST }}

      #  use the Cypress GitHub Action to run Cypress Component tests within the chrome browser
      - name: Cypress run components
        uses: cypress-io/github-action@v6
        with:
          install: false
          component: true
          # we launch the app in preview mode to avoid issues with hmr websockets from vite polluting the mocks
          start: yarn preview:test
          browser: chrome
          quiet: true
          config-file: cypress.config.ts
          cache-key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
        env:
          VITE_PORT: ${{ vars.VITE_PORT }}
          VITE_VERSION: ${{ vars.VITE_VERSION }}
          VITE_GRAASP_DOMAIN: ${{ vars.VITE_GRAASP_DOMAIN }}
          VITE_GRAASP_API_HOST: ${{ vars.VITE_GRAASP_API_HOST }}
          VITE_GRAASP_AUTH_HOST: ${{ vars.VITE_GRAASP_AUTH_HOST }}
          VITE_GRAASP_PLAYER_HOST: ${{ vars.VITE_GRAASP_PLAYER_HOST }}
          VITE_GRAASP_LIBRARY_HOST: ${{ vars.VITE_GRAASP_LIBRARY_HOST }}
          VITE_GRAASP_ANALYZER_HOST: ${{ vars.VITE_GRAASP_ANALYZER_HOST }}
          VITE_SHOW_NOTIFICATIONS: ${{ vars.VITE_SHOW_NOTIFICATIONS }}
          VITE_GRAASP_REDIRECTION_HOST: ${{ vars.VITE_GRAASP_REDIRECTION_HOST }}

      #  use the Cypress GitHub Action to run Cypress E2E tests within the chrome browser
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          install: false
          # the app preview is already run for the component tests
          browser: chrome
          quiet: true
          config-file: cypress.config.ts
          cache-key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
        env:
          VITE_PORT: ${{ vars.VITE_PORT }}
          VITE_VERSION: ${{ vars.VITE_VERSION }}
          VITE_GRAASP_DOMAIN: ${{ vars.VITE_GRAASP_DOMAIN }}
          VITE_GRAASP_API_HOST: ${{ vars.VITE_GRAASP_API_HOST }}
          VITE_GRAASP_AUTH_HOST: ${{ vars.VITE_GRAASP_AUTH_HOST }}
          VITE_GRAASP_PLAYER_HOST: ${{ vars.VITE_GRAASP_PLAYER_HOST }}
          VITE_GRAASP_LIBRARY_HOST: ${{ vars.VITE_GRAASP_LIBRARY_HOST }}
          VITE_GRAASP_ANALYZER_HOST: ${{ vars.VITE_GRAASP_ANALYZER_HOST }}
          VITE_SHOW_NOTIFICATIONS: ${{ vars.VITE_SHOW_NOTIFICATIONS }}
          VITE_GRAASP_REDIRECTION_HOST: ${{ vars.VITE_GRAASP_REDIRECTION_HOST }}

      # after the test run completes
      # store any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - name: coverage report
        run: npx nyc report --reporter=text-summary
